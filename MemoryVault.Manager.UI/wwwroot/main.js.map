{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/gallery-item/gallery-item.component.html","webpack:///./src/app/components/gallery-item/gallery-item.component.ts","webpack:///./src/app/components/side-upload/side-upload.component.html","webpack:///./src/app/components/side-upload/side-upload.component.ts","webpack:///./src/app/gallery/gallery.component.html","webpack:///./src/app/gallery/gallery.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/sample-upload/sample-upload.component.html","webpack:///./src/app/sample-upload/sample-upload.component.ts","webpack:///./src/app/services/singlefileupload.service.ts","webpack:///./src/app/services/upload.service.ts","webpack:///./src/app/store/app.actions.ts","webpack:///./src/app/store/app.effects.ts","webpack:///./src/app/store/app.reducer.ts","webpack:///./src/app/ui/header/header.component.html","webpack:///./src/app/ui/header/header.component.ts","webpack:///./src/app/ui/layout/layout.component.html","webpack:///./src/app/ui/layout/layout.component.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/app/upload-center/upload-center.component.html","webpack:///./src/app/upload-center/upload-center.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<app-layout>\r\n  <router-outlet></router-outlet>\r\n</app-layout>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FileDropModule } from 'ngx-file-drop';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\r\nimport { ButtonsModule } from 'ngx-bootstrap';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { UiModule } from './ui/ui.module';\r\nimport { GalleryComponent } from './gallery/gallery.component';\r\nimport { UploadCenterComponent } from './upload-center/upload-center.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { appReducer } from './store/app.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { AppEffects } from './store/app.effects';\r\nimport { environment } from '../environments/environment';\r\nimport { SampleUploadComponent } from './sample-upload/sample-upload.component';\r\nimport { FileUploaderService } from './services/upload.service';\r\nimport { SideUploadComponent } from './components/side-upload/side-upload.component';\r\nimport { SingleFileUploadService } from './services/singlefileupload.service';\r\nimport { GalleryItemComponent } from './components/gallery-item/gallery-item.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n  { path: \"not-found\", component: NotFoundComponent },\r\n  { path: \"gallery\", component: GalleryComponent },\r\n  { path: \"upload\", component: UploadCenterComponent },\r\n  { path: \"sample-upload\", component: SampleUploadComponent },\r\n  { path: \"**\", redirectTo: \"not-found\" }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NotFoundComponent,\r\n    HomeComponent,\r\n    NotFoundComponent,\r\n    GalleryComponent,\r\n    UploadCenterComponent,\r\n    SampleUploadComponent,\r\n    SideUploadComponent,\r\n    GalleryItemComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    UiModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    HttpClientModule,\r\n    FileDropModule,\r\n    StoreModule.forRoot({uploadFeature: appReducer}),\r\n    EffectsModule.forRoot([AppEffects]),\r\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\r\n    ButtonsModule\r\n  ],\r\n  providers: [ FileUploaderService, SingleFileUploadService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div class=\"card w-100\" >\r\n  <img class=\"card-img-top\" src=\"http://localhost:5000/api/thumbfetch/{{ model.id}}/M\" alt=\"Card image cap\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Card title</h5>\r\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.Id : {{ model.id }}</p>\r\n    <a href=\"http://localhost:5000/api/thumbfetch/{{ model.id}}/S\" class=\"btn btn-primary\">Go somewhere</a>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-gallery-item',\r\n  templateUrl: './gallery-item.component.html',\r\n  styleUrls: ['./gallery-item.component.css']\r\n})\r\nexport class GalleryItemComponent implements OnInit {\r\n\r\n  @Input()\r\n  model: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-2 \">\r\n  <div class=\"col-12\">\r\n    <file-drop headertext=\"\" (onFileDrop)=\"dropped($event)\" (onFileOver)=\"fileOver($event)\" customstyle=\"drop-zone-custom\"\r\n      class=\"drop-zone\" (onFileLeave)=\"fileLeave($event)\">\r\n      <span>Drop files here</span>\r\n    </file-drop>\r\n  </div>\r\n</div>\r\n<div class=\"row mt-2\">\r\n  <div class=\"col-12\">\r\n    <button type=\"button\" class=\"btn btn-primary w-100\" [(ngModel)]=\"autoUpload\" btnCheckbox (click)=\"handleAutoUpload()\"\r\n      btnCheckboxTrue=\"On\" btnCheckboxFalse=\"Off\">\r\n      Auto Upload : {{ autoUpload }}\r\n    </button>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    Uploading :{{ isUploading }}\r\n  </div>\r\n</div>\r\n<div class=\"row mt-2\">\r\n  <div class=\"col-12\">\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table table-sm table-striped\">\r\n        <thead class=\"thead-light\">\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">%</th>\r\n            <th scope=\"col\">State</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"upload-name-style\">\r\n          <tr *ngFor=\"let item of queue\">\r\n            <td>{{ item?.file?.name }} \r\n              <br/>\r\n              {{ item?.file?.size/1024/1024 | number:'.2' }} MB\r\n            </td>\r\n            <td>{{ item.progress + ' %' }}</td>\r\n            <td>\r\n              <span *ngIf=\"item.isPending()\" class=\"badge badge-default\">Pending</span>\r\n              <span *ngIf=\"item.isSuccess()\" class=\"badge badge-success\">Uploaded</span>\r\n              <span *ngIf=\"item.inProgress()\" class=\"badge badge-warning\">Uploading</span>\r\n              <span *ngIf=\"item.isError()\" class=\"badge badge-danger\">Error</span>\r\n              <span *ngIf=\"item.inQueued()\" class=\"badge badge-secondary\">Queued</span>\r\n            </td>\r\n            <td class=\"text-right\">\r\n              <a tooltip=\"Upload file\" (click)=\"item.upload()\" *ngIf=\"item.isUploadable()\">\r\n                <i class=\"fa fa-upload\"></i>\r\n              </a>\r\n              <a tooltip=\"Cancel upload\" (click)=\"item.cancel()\" *ngIf=\"item.inProgress()\">\r\n                <i class=\"fa fa-times-circle\"></i>\r\n              </a>\r\n              <a tooltip=\"Remove from queue\" (click)=\"item.remove()\" *ngIf=\"!item.inProgress()\">\r\n                <i class=\"fa fa-trash\"></i>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FileSystemFileEntry, UploadEvent } from 'ngx-file-drop';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nimport { FileQueueObject, FileUploaderService } from '../../services/upload.service';\r\nimport * as fromAppAction from '../../store/app.actions';\r\nimport { AppState } from '../../store/app.reducer';\r\n\r\n@Component({\r\n  selector: 'app-side-upload',\r\n  templateUrl: './side-upload.component.html',\r\n  styleUrls: ['./side-upload.component.css']\r\n})\r\nexport class SideUploadComponent implements OnInit {\r\n\r\n  queue: FileQueueObject[];\r\n  autoUpload: string = 'Off';\r\n  stateSubs: Subscription;\r\n  isUploading = false;\r\n\r\n  constructor(\r\n    private store: Store<fromAppAction.AppActions>) { }\r\n\r\n  ngOnInit() {\r\n    //this.queue = this.uploadService.queue;\r\n\r\n    this.stateSubs = this.store.select(\"uploadFeature\")\r\n      .subscribe( (state: AppState) =>{\r\n          this.queue = state.pendingUploads;\r\n          this.isUploading = state.isUploading;\r\n      });\r\n  }\r\n\r\n  public dropped(event: UploadEvent) {\r\n\r\n    for (const droppedFile of event.files) {\r\n\r\n      //   // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n\r\n          //console.log(\"file entry\");\r\n          // Here you can access the real file\r\n          // this.uploadService.addToQueue([file]);\r\n\r\n          this.store.dispatch(new fromAppAction.EnqueueFile(file));\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  public fileOver(event) {\r\n    //console.log(event);\r\n  }\r\n\r\n  public fileLeave(event) {\r\n    //console.log(event);\r\n  }\r\n\r\n  public uploadQueue() {\r\n    //this.uploadService.uploadByQueue();\r\n  }\r\n\r\n  public handleAutoUpload() {\r\n    this.store.dispatch(new fromAppAction.SetAutoUpload( this.autoUpload == 'On' ));\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-xl-9 col-lg-8 col-6\">\r\n    <h3>Gallery</h3>\r\n    <button class=\"btn btn-primary\" (click)=\"refresh()\">Refresh</button>\r\n    <div class=\"row\">\r\n      <div class=\"col-xl-3\" *ngFor=\"let item of (items | async)\">\r\n        <app-gallery-item [model]=\"item\"></app-gallery-item>\r\n      </div>\r\n      \r\n    </div>\r\n  </div>\r\n  <div class=\"col-xl-3 col-lg-4 col-6 side-upload-container\" style=\"height: 100vh\">\r\n    <app-side-upload></app-side-upload>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-gallery',\r\n  templateUrl: './gallery.component.html',\r\n  styleUrls: ['./gallery.component.css']\r\n})\r\nexport class GalleryComponent implements OnInit {\r\n\r\n  items : Observable<any>;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  refresh() {\r\n    this.items = this.http.get(\"http://localhost:5000/api/gallery/20\");\r\n    console.log(\"refreshed\");\r\n  }\r\n\r\n}\r\n","<p>\r\n  home works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  not-found works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row pt-5\">\r\n    <file-drop headertext=\"\" (onFileDrop)=\"dropped($event)\" (onFileOver)=\"fileOver($event)\" class=\"drop-zone\"\r\n      (onFileLeave)=\"fileLeave($event)\">\r\n      <span>Drop files here</span>\r\n    </file-drop>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"upload-table\">\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"upload-name-style\">\r\n          <tr *ngFor=\"let item of files; let i=index\">\r\n            <td><strong>{{ item.relativePath }}</strong></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { \r\n  UploadFile, \r\n  UploadEvent, \r\n  FileSystemFileEntry, \r\n  FileSystemDirectoryEntry \r\n} from 'ngx-file-drop';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-sample-upload',\r\n  templateUrl: './sample-upload.component.html',\r\n  styleUrls: ['./sample-upload.component.css']\r\n})\r\nexport class SampleUploadComponent implements OnInit {\r\n\r\n  public files: UploadFile[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public dropped(event: UploadEvent) {\r\n    this.files = event.files;\r\n\r\n    for (const droppedFile of event.files) {\r\n\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n\r\n          // Here you can access the real file\r\n          console.log(droppedFile.relativePath, file);\r\n          \r\n          // You could upload it like this:\r\n          const formData = new FormData()\r\n          formData.append('logo', file, droppedFile.relativePath)\r\n \r\n          // // Headers\r\n          // const headers = new HttpHeaders({\r\n          //   'security-token': 'mytoken'\r\n          // })\r\n \r\n          this.http.post('http://localhost:5000/api/v1/upload', formData, { responseType: 'blob' })\r\n          .subscribe(data => {\r\n            // Sanitized logo returned from backend\r\n            console.log(\"Upload result => \");\r\n            console.log(data);\r\n          })          \r\n\r\n        });\r\n      } else {\r\n        // It was a directory (empty directories are added, otherwise only files)\r\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n        console.log(droppedFile.relativePath, fileEntry);\r\n      }\r\n    }\r\n  }\r\n\r\n  public fileOver(event) {\r\n    console.log(event);\r\n  }\r\n\r\n  public fileLeave(event) {\r\n    console.log(event);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { FileQueueObject } from \"./upload.service\";\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpErrorResponse, HttpResponse } from \"@angular/common/http\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"../store/app.reducer\";\r\nimport *  as fromAppActions from '../store/app.actions';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SingleFileUploadService {\r\n\r\n    public url: string = 'http://localhost:5000/api/v2/upload';\r\n    //subs: Subscription;\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private store: Store<AppState>\r\n    ) { }\r\n\r\n    public upload(item: FileQueueObject) {\r\n\r\n        // create form data for file\r\n        const form = new FormData();\r\n        form.append('file', item.file, item.file.name);\r\n\r\n        // upload file and report progress\r\n        const req = new HttpRequest('POST', this.url, form, {\r\n            reportProgress: true,\r\n        });\r\n\r\n        // upload file and report progress\r\n        //this.subs =\r\n            this.http\r\n                .request(req)\r\n                .subscribe(\r\n                    (event: any) => {\r\n                        if (event.type === HttpEventType.UploadProgress) {\r\n                            const progress = Math.round(100 * event.loaded / event.total);\r\n                            this.store.dispatch(new fromAppActions.FileUploading({ id: item.id, progressPercentage: progress }));\r\n\r\n                        } else if (event instanceof HttpResponse) {\r\n                            this.store.dispatch(new fromAppActions.FileUploadComplete(item.id));\r\n                        }\r\n                    },\r\n                    (err: HttpErrorResponse) => {\r\n                        \r\n                        this.store.dispatch(new fromAppActions.FileUploadFailed({ id: item.id, error: err }));\r\n                    }\r\n                );\r\n\r\n    }\r\n}","import * as _ from 'lodash';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Guid } from \"guid-typescript\";\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpRequest, HttpResponse, HttpEventType } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nexport enum FileQueueStatus {\r\n  Pending,\r\n  Queued,\r\n  Success,\r\n  Error,\r\n  Progress\r\n}\r\n\r\nexport class FileQueueObject {\r\n  public id: Guid;\r\n  public file: any;\r\n  public status: FileQueueStatus = FileQueueStatus.Pending;\r\n  public progress: number = 0;\r\n  public request: Subscription = null;\r\n  public response: HttpResponse<any> | HttpErrorResponse = null;\r\n\r\n  constructor(file: any) {\r\n    this.id = Guid.create();\r\n    this.file = file;\r\n  }\r\n\r\n  // actions\r\n  public upload = () => { /* set in service */ };\r\n  public cancel = () => { /* set in service */ };\r\n  public remove = () => { /* set in service */ };\r\n\r\n  // statuses\r\n  public isPending = () => this.status === FileQueueStatus.Pending;\r\n  public isSuccess = () => this.status === FileQueueStatus.Success;\r\n  public isError = () => this.status === FileQueueStatus.Error;\r\n  public inProgress = () => this.status === FileQueueStatus.Progress;\r\n  public inQueued = () => this.status === FileQueueStatus.Queued;\r\n  public isUploadable = () => this.status === FileQueueStatus.Pending || this.status === FileQueueStatus.Error;\r\n\r\n  // public setProgress(event: any) {\r\n  //   this.progress = Math.round(100 * event.loaded / event.total);\r\n  //   this.status = FileQueueStatus.Progress;\r\n  // }\r\n\r\n  // public success() {\r\n\r\n  // }\r\n\r\n  // public failure() {\r\n\r\n  // }\r\n}\r\n\r\nexport const allowedFileTypes: string[] = ['.jpg', '.jpeg', '.png', '.mp4', '.avi', '.mkv', '.mov'];\r\n\r\n// tslint:disable-next-line:max-classes-per-file\r\n@Injectable({ providedIn: 'root' })\r\nexport class FileUploaderService {\r\n\r\n  public url: string = 'http://localhost:5000/api/v2/upload';\r\n\r\n  private _queue: BehaviorSubject<FileQueueObject[]>;\r\n  private _files: FileQueueObject[] = [];\r\n  private _uploadQueue: FileQueueObject[] = [];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this._queue = <BehaviorSubject<FileQueueObject[]>>new BehaviorSubject(this._files);\r\n  }\r\n\r\n  // the queue\r\n  public get queue() {\r\n    return this._queue.asObservable();\r\n  }\r\n\r\n  // public events\r\n  public onCompleteItem(queueObj: FileQueueObject, response: any): any {\r\n    return { queueObj, response };\r\n  }\r\n\r\n  // public functions\r\n  public addToQueue(data: any) {\r\n    // add file to the queue\r\n    _.each(data, (file: any) => this._addToQueue(file));\r\n\r\n  }\r\n\r\n  public clearQueue() {\r\n    // clear the queue\r\n    this._files = [];\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  public uploadAll() {\r\n\r\n    _.each(this._files, (queueObj: FileQueueObject) => {\r\n      //console.log(\"call _upload\");\r\n      if (queueObj.isUploadable()) {\r\n        this._upload(queueObj);\r\n      }\r\n    });\r\n  }\r\n\r\n  public uploadByQueue() {\r\n\r\n    _.each(this._files, (q: FileQueueObject) => {\r\n      q.status = FileQueueStatus.Queued;\r\n      this._uploadQueue.push(q);\r\n    });\r\n\r\n    this.uploadNext();\r\n  }\r\n\r\n  public uploadQueueAndRemove() {\r\n\r\n  }\r\n\r\n  private uploadNext() {\r\n    let queueObj = this._uploadQueue.shift();\r\n\r\n    if (queueObj) {\r\n\r\n      // create form data for file\r\n      const form = new FormData();\r\n      form.append('file', queueObj.file, queueObj.file.name);\r\n\r\n      // upload file and report progress\r\n      const req = new HttpRequest('POST', this.url, form, {\r\n        reportProgress: true,\r\n      });\r\n\r\n      // upload file and report progress\r\n      queueObj.request = this.http.request(req).subscribe(\r\n        (event: any) => {\r\n          if (event.type === HttpEventType.UploadProgress) {\r\n            this._uploadProgress(queueObj, event);\r\n          } else if (event instanceof HttpResponse) {\r\n            this._uploadComplete(queueObj, event);\r\n            this.uploadNext();\r\n          }\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          if (err.error instanceof Error) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            this._uploadFailed(queueObj, err);\r\n          } else {\r\n            // The backend returned an unsuccessful response code.\r\n            this._uploadFailed(queueObj, err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  // private functions\r\n  private _addToQueue(file: any) {\r\n\r\n    if (!this.isAllowed(file.name))\r\n      return;\r\n\r\n    const queueObj = new FileQueueObject(file);\r\n\r\n    // set the individual object events\r\n    queueObj.upload = () => this._upload(queueObj);\r\n    queueObj.remove = () => this._removeFromQueue(queueObj);\r\n    queueObj.cancel = () => this._cancel(queueObj);\r\n\r\n    // push to the queue\r\n    this._files.push(queueObj);\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private _removeFromQueue(queueObj: FileQueueObject) {\r\n    _.remove(this._files, queueObj);\r\n  }\r\n\r\n  private _upload(queueObj: FileQueueObject) {\r\n\r\n    console.log(\"_upload\");\r\n\r\n    // create form data for file\r\n    const form = new FormData();\r\n    form.append('file', queueObj.file, queueObj.file.name);\r\n\r\n    // upload file and report progress\r\n    const req = new HttpRequest('POST', this.url, form, {\r\n      reportProgress: true,\r\n    });\r\n\r\n    // upload file and report progress\r\n    queueObj.request = this.http.request(req).subscribe(\r\n      (event: any) => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this._uploadProgress(queueObj, event);\r\n        } else if (event instanceof HttpResponse) {\r\n          this._uploadComplete(queueObj, event);\r\n        }\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        if (err.error instanceof Error) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          this._uploadFailed(queueObj, err);\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          this._uploadFailed(queueObj, err);\r\n        }\r\n      }\r\n    );\r\n\r\n    return queueObj;\r\n  }\r\n\r\n  private _cancel(queueObj: FileQueueObject) {\r\n    // update the FileQueueObject as cancelled\r\n    queueObj.request.unsubscribe();\r\n    queueObj.progress = 0;\r\n    queueObj.status = FileQueueStatus.Pending;\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private _uploadProgress(queueObj: FileQueueObject, event: any) {\r\n    // update the FileQueueObject with the current progress\r\n    const progress = Math.round(100 * event.loaded / event.total);\r\n    queueObj.progress = progress;\r\n    queueObj.status = FileQueueStatus.Progress;\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private _uploadComplete(queueObj: FileQueueObject, response: HttpResponse<any>) {\r\n    // update the FileQueueObject as completed\r\n    queueObj.progress = 100;\r\n    queueObj.status = FileQueueStatus.Success;\r\n    queueObj.response = response;\r\n    this._queue.next(this._files);\r\n    this.onCompleteItem(queueObj, response.body);\r\n  }\r\n\r\n  private _uploadFailed(queueObj: FileQueueObject, response: HttpErrorResponse) {\r\n    // update the FileQueueObject as errored\r\n    queueObj.progress = 0;\r\n    queueObj.status = FileQueueStatus.Error;\r\n    queueObj.response = response;\r\n    this._queue.next(this._files);\r\n  }\r\n\r\n  private isAllowed(fileName: string): boolean {\r\n\r\n    if (fileName) {\r\n\r\n      let str = fileName.toLowerCase();\r\n      for (let ft of allowedFileTypes) {\r\n        if (str.endsWith(ft))\r\n          return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n}","import { Action } from '@ngrx/store';\r\nimport { FileQueueObject } from '../services/upload.service';\r\nimport { Guid } from \"guid-typescript\";\r\n\r\nexport const ENQUEUE_FILE = \"[APP:CMD]=ENQUEUE_FILE\";\r\nexport const UPLOAD_FILE = \"[APP:CMD]=UPLOAD_FILE\";\r\nexport const START_UPLOAD = \"[APP:CMD]=START_UPLOAD\";\r\nexport const STOP_UPLOAD = \"[APP:CMD]=START_UPLOAD\";\r\nexport const START_UPLOAD_NEXT = \"[APP:CMD]=START_UPLOAD_NEXT\";\r\nexport const SET_AUTO_UPLOAD = '[APP:CMD]=SET_AUTO_UPLOAD';\r\nexport const UPLOAD_NEXT = '[APP:CMD]=UPLOAD_NEXT';\r\n\r\nexport const FILE_ENQUEUED = '[APP:EVENT]=FILE_ENQUEUED'; \r\nexport const FILE_UPLOADING = \"[APP:EVENT]=FILE_UPLOADING\";\r\nexport const FILE_UPLOAD_COMPLETE = \"[APP:EVENT]=FILE_UPLOAD_COMPLETE\";\r\nexport const FILE_UPLOAD_FAILED = \"[APP:EVENT]=FILE_UPLOAD_FAILED\";\r\nexport const ALL_UPLOAD_COMPLETE = \"[APP:EVENT]=ALL_UPLOAD_COMPLETE\";\r\n\r\nexport class EnqueueFile implements Action{\r\n    readonly type = ENQUEUE_FILE;\r\n\r\n    constructor(public payload: File){}\r\n}\r\n\r\nexport class StartUpload implements Action{\r\n    readonly type = START_UPLOAD;\r\n}\r\n\r\nexport class StopUpload implements Action{\r\n    readonly type = STOP_UPLOAD;\r\n}\r\n\r\nexport class UploadNext implements Action{\r\n    readonly type = UPLOAD_NEXT;\r\n}\r\n\r\nexport class UploadFile implements Action{\r\n    readonly type = UPLOAD_FILE;\r\n\r\n    constructor(public payload: FileQueueObject){}\r\n}\r\n\r\nexport class SetAutoUpload implements Action{\r\n    readonly type = SET_AUTO_UPLOAD;\r\n\r\n    constructor(public payload: boolean){}\r\n}\r\n\r\nexport class FileUploading implements Action{\r\n    readonly type = FILE_UPLOADING;\r\n\r\n    constructor(public payload: {id: Guid, progressPercentage: number}){}\r\n}\r\n\r\nexport class FileUploadComplete implements Action{\r\n    readonly type = FILE_UPLOAD_COMPLETE;\r\n\r\n    constructor(public payload: Guid){}\r\n}\r\n\r\nexport class FileUploadFailed implements Action{\r\n    readonly type = FILE_UPLOAD_FAILED;\r\n\r\n    constructor(public payload:{ id: Guid, error: any } ){}\r\n}\r\n\r\nexport class AllUploadComplete implements Action{\r\n    readonly type = ALL_UPLOAD_COMPLETE;\r\n}\r\n\r\nexport type AppActions =\r\n    UploadNext\r\n    | StartUpload \r\n    | StopUpload\r\n    | UploadFile\r\n    | SetAutoUpload\r\n    | EnqueueFile\r\n    | FileUploading\r\n    | FileUploadComplete\r\n    | FileUploadFailed\r\n    | AllUploadComplete\r\n    ;","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { Effect, Actions } from '@ngrx/effects';\r\nimport { HttpEvent, HttpEventType, HttpRequest } from '@angular/common/http';\r\nimport { switchMap, tap, take, map, catchError, flatMap, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport * as fromAppActions from './app.actions';\r\nimport { AppState } from './app.reducer';\r\nimport { UploadFile, FileSystemFileEntry } from \"ngx-file-drop\";\r\nimport { SingleFileUploadService } from \"../services/singlefileupload.service\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AppEffects {\r\n\r\n    // TODO : buradan taşınacak\r\n    public url: string = 'http://localhost:5000/api/v2/upload';\r\n\r\n    @Effect()\r\n    appEnqueueFile = this.actions$\r\n        .ofType(fromAppActions.ENQUEUE_FILE)\r\n        .pipe(\r\n            map((action: fromAppActions.EnqueueFile) => action),\r\n            withLatestFrom(this.store$.select('uploadFeature')),\r\n            map(([action, state]) => {\r\n\r\n                console.log(\"ENQUEUE_FILE\", state);\r\n\r\n                if (state.autoUpload && !state.isUploading) {\r\n                    console.log(\"ENQUEUE_FILE\", \"start upload\");\r\n                    return new fromAppActions.StartUpload();\r\n                }\r\n\r\n                return { type: 'DUMMY_CMD=>ENQUEUE_FILE' };\r\n            })\r\n        );\r\n\r\n    @Effect()\r\n    appStartUpload = this.actions$\r\n        .ofType(fromAppActions.START_UPLOAD)\r\n        .pipe(\r\n            map((action: fromAppActions.StartUpload) => action),\r\n            withLatestFrom(this.store$.select('uploadFeature')),\r\n            map(([action, state]) => {\r\n\r\n                if (state.pendingUploads.length > 0)\r\n                    return new fromAppActions.UploadNext();\r\n                else\r\n                    return { type: 'DUMMY_CMD=>START_UPLOAD' };\r\n            })\r\n        );\r\n\r\n    @Effect()\r\n    appUploadNext = this.actions$\r\n        .ofType(fromAppActions.UPLOAD_NEXT)\r\n        .pipe(\r\n            map((action: fromAppActions.UploadNext) => action),\r\n            withLatestFrom(this.store$.select('uploadFeature')),\r\n            map(([action, state]) => {\r\n                if (state.isUploading\r\n                    && state.pendingUploads.length > 0) {\r\n                    let item = state.uploadQueue.shift();\r\n\r\n                    if (item) {\r\n                        return new fromAppActions.UploadFile(item);\r\n                    }\r\n                }\r\n\r\n                //return new fromAppActions.StopUpload();\r\n                return new fromAppActions.AllUploadComplete();\r\n            })\r\n        );\r\n\r\n    @Effect()\r\n    appUploadFile = this.actions$\r\n        .ofType(fromAppActions.UPLOAD_FILE)\r\n        .pipe(\r\n            //take(1),\r\n            map((action: fromAppActions.UploadFile) => action.payload),\r\n            map(payload => {\r\n                console.log(\"UPLOAD_FILE\",\"init...\");\r\n                this.sfus.upload(payload);\r\n                console.log(\"UPLOAD_FILE\",\"initiated.\");\r\n                return { type: 'DUMMY_CMD=>UPLOAD_FILE' }\r\n            })\r\n        );\r\n\r\n    @Effect()\r\n    appUploadComplete = this.actions$\r\n        .ofType(fromAppActions.FILE_UPLOAD_COMPLETE)\r\n        .pipe(\r\n            map( action => {\r\n                return new fromAppActions.UploadNext();\r\n            })\r\n        );\r\n\r\n    @Effect()\r\n    appSetAutoUpload = this.actions$\r\n        .ofType(fromAppActions.SET_AUTO_UPLOAD)\r\n        .pipe(\r\n            map((action: fromAppActions.SetAutoUpload) => action),\r\n            withLatestFrom(this.store$.select('uploadFeature')),\r\n            map(([action, state]) => {\r\n\r\n                console.log('SET_AUTO_UPLOAD', action, state);\r\n\r\n                if (action.payload\r\n                    && state.pendingUploads\r\n                    && state.pendingUploads.length > 0\r\n                    && !state.isUploading) {\r\n                    return new fromAppActions.StartUpload();\r\n                } else {\r\n                    return { type: 'DUMMY_CMD=>SET_AUTO_UPLOAD' };\r\n                }\r\n            })\r\n        );\r\n\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store$: Store<AppState>,\r\n        private sfus: SingleFileUploadService) { }\r\n}","import * as AppActions from './app.actions';\r\nimport { UploadFile } from 'ngx-file-drop';\r\nimport { FileQueueObject, FileQueueStatus } from '../services/upload.service';\r\n\r\nexport const allowedFileTypes: string[] = ['.jpg', '.jpeg', '.png', '.mp4', '.avi', '.mkv', '.mov'];\r\n\r\nexport interface AppState {\r\n    isUploading: boolean;\r\n    autoUpload: boolean;\r\n    pendingUploads: FileQueueObject[];\r\n    uploadQueue: FileQueueObject[];\r\n}\r\n\r\nconst initialState: AppState = {\r\n    isUploading: false,\r\n    autoUpload: false,\r\n    pendingUploads: [],\r\n    uploadQueue: []\r\n};\r\n\r\nexport function appReducer(state = initialState, action: AppActions.AppActions) {\r\n    console.log(\"appReducer => \" + action.type);\r\n\r\n    switch (action.type) {\r\n        case (AppActions.ENQUEUE_FILE):\r\n            if (isAllowed(action.payload.name)) {\r\n                let fqo = new FileQueueObject(action.payload);\r\n                state.pendingUploads.push(fqo);\r\n                state.uploadQueue.push(fqo);\r\n                return {\r\n                    ...state,\r\n                    pendingUploads: state.pendingUploads,\r\n                    uploadQueue: state.uploadQueue\r\n                }\r\n            }\r\n            else\r\n                return state;\r\n\r\n        case (AppActions.UPLOAD_FILE):\r\n            const uidx = state.pendingUploads.map(p => p.id).indexOf(action.payload.id);\r\n            action.payload.status = FileQueueStatus.Progress;\r\n\r\n            return {\r\n                ...state,\r\n                pendingUploads: state.pendingUploads\r\n            }\r\n\r\n        case (AppActions.FILE_UPLOADING):\r\n            const upidx = state.pendingUploads.map(p => p.id).indexOf(action.payload.id);\r\n            let itemProg = state.pendingUploads[upidx];\r\n            itemProg.status = FileQueueStatus.Progress;\r\n            itemProg.progress = action.payload.progressPercentage;\r\n\r\n            return {\r\n                ...state,\r\n                pendingUploads: state.pendingUploads\r\n            }\r\n\r\n        case (AppActions.FILE_UPLOAD_FAILED):\r\n            const fidx = state.pendingUploads.map(p => p.id).indexOf(action.payload.id);\r\n            let itemFail = state.pendingUploads[fidx];\r\n            itemFail.status = FileQueueStatus.Error;\r\n\r\n            return {\r\n                ...state,\r\n                pendingUploads: state.pendingUploads\r\n            }\r\n\r\n        case (AppActions.FILE_UPLOAD_COMPLETE):\r\n            const idx = state.pendingUploads.map(p => p.id).indexOf(action.payload);\r\n            return {\r\n                ...state,\r\n                pendingUploads: [\r\n                    ...state.pendingUploads.slice(0, idx),\r\n                    ...state.pendingUploads.slice(idx + 1)\r\n                ]\r\n            }\r\n\r\n        case (AppActions.START_UPLOAD):\r\n            return {\r\n                ...state,\r\n                isUploading: true\r\n            }\r\n\r\n        case (AppActions.ALL_UPLOAD_COMPLETE):\r\n        case (AppActions.STOP_UPLOAD):\r\n            return {\r\n                ...state,\r\n                isUploading: false\r\n            }\r\n\r\n        case (AppActions.SET_AUTO_UPLOAD):\r\n            return {\r\n                ...state,\r\n                autoUpload: action.payload\r\n            };\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nfunction isAllowed(fileName: string): boolean {\r\n\r\n    if (fileName) {\r\n\r\n        let str = fileName.toLowerCase();\r\n        for (let ft of allowedFileTypes) {\r\n            if (str.endsWith(ft))\r\n                return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/\">Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\"  routerLink=\"/gallery\">Gallery</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\"  routerLink=\"/upload\">Upload</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\"  routerLink=\"/sample-upload\">Sample Upload</a>\r\n      </li>\r\n    </ul>   \r\n  </div>\r\n</nav>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal,NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  closeResult: string;\r\n  toggleMenu = false;\r\n  modalRef: NgbModalRef;\r\n  \r\n  showMessage: boolean;\r\n  message: string;\r\n\r\n  constructor(private router: Router,\r\n    private modal: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onToggleMenu() {\r\n    if (this.toggleMenu === true) {\r\n      this.toggleMenu = false;\r\n    } else {\r\n      this.toggleMenu = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <ng-content></ng-content>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <app-footer></app-footer> -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.css']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    LayoutComponent,\r\n    HeaderComponent,\r\n    FooterComponent\r\n  ],\r\n  exports: [ LayoutComponent ]\r\n})\r\nexport class UiModule { }\r\n","<div class=\"container\">\r\n  <div class=\"row pt-5\">\r\n    <file-drop headertext=\"\" (onFileDrop)=\"dropped($event)\" (onFileOver)=\"fileOver($event)\" customstyle=\"border:0px;\"\r\n      class=\"drop-zone\" (onFileLeave)=\"fileLeave($event)\">\r\n      <span>Drop files here</span>\r\n    </file-drop>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"upload-table\">\r\n      <table class=\"table table-sm table-striped\">\r\n        <thead class=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Size</th>\r\n            <th scope=\"col\">%</th>\r\n            <th scope=\"col\">State</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let item of queue | async\">\r\n            <td><strong>{{ item?.file?.name }}</strong></td>\r\n            <td>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n            <td>{{ item.progress + ' %' }}</td>\r\n            <td>\r\n              <span *ngIf=\"item.isPending()\" class=\"badge badge-default\">Pending</span>\r\n              <span *ngIf=\"item.isSuccess()\" class=\"badge badge-success\">Uploaded</span>\r\n              <span *ngIf=\"item.inProgress()\" class=\"badge badge-warning\">Uploading</span>\r\n              <span *ngIf=\"item.isError()\" class=\"badge badge-danger\">Error</span>\r\n              <span *ngIf=\"item.inQueued()\" class=\"badge badge-secondary\">Queued</span>\r\n            </td>\r\n            <td class=\"text-right\">\r\n              <a tooltip=\"Upload file\" (click)=\"item.upload()\" *ngIf=\"item.isUploadable()\">\r\n                <i class=\"fa fa-upload\"></i>\r\n              </a>\r\n              <a tooltip=\"Cancel upload\" (click)=\"item.cancel()\" *ngIf=\"item.inProgress()\">\r\n                <i class=\"fa fa-times-circle\"></i>\r\n              </a>\r\n              <a tooltip=\"Remove from queue\" (click)=\"item.remove()\" *ngIf=\"!item.inProgress()\">\r\n                <i class=\"fa fa-trash\"></i>\r\n              </a>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <button class=\"btn btn-primary\" (click)=\"uploadQueue()\">Upload By Queue</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FileSystemDirectoryEntry, FileSystemFileEntry, UploadEvent, UploadFile } from 'ngx-file-drop';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as fromAppStore from '../store/app.actions';\r\nimport { FileUploaderService, FileQueueObject } from '../services/upload.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-upload-center',\r\n  templateUrl: './upload-center.component.html',\r\n  styleUrls: ['./upload-center.component.css']\r\n})\r\nexport class UploadCenterComponent implements OnInit {\r\n\r\n  queue: Observable<FileQueueObject[]>;\r\n\r\n  constructor(\r\n    private store: Store<fromAppStore.AppActions>,\r\n    private uploadService: FileUploaderService) { }\r\n\r\n  ngOnInit() {\r\n    this.queue = this.uploadService.queue;\r\n  }\r\n\r\n  public files: UploadFile[] = [];\r\n\r\n  public dropped(event: UploadEvent) {\r\n\r\n    for (const droppedFile of event.files) {\r\n\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n\r\n          //console.log(\"file entry\");\r\n          // Here you can access the real file\r\n          this.uploadService.addToQueue([file]);\r\n        });\r\n      }\r\n      // else {\r\n      //   // It was a directory (empty directories are added, otherwise only files)\r\n      //   const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n      //   console.log(droppedFile.relativePath, fileEntry);\r\n      // }\r\n    }\r\n\r\n  }\r\n\r\n  public fileOver(event) {\r\n    //console.log(event);\r\n  }\r\n\r\n  public fileLeave(event) {\r\n    //console.log(event);\r\n  }\r\n\r\n  public uploadQueue() {\r\n    this.uploadService.uploadByQueue();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}